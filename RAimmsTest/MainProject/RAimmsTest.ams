## ams_version=1.0

Model Main_RAimmsTest {
    Procedure fillCosines {
        Body: {
            !Initialize the data
            Cosines(i) := ord(i);
            
            !1. Retrieve AIMMS data
            !2. Perform an R calculation
            !3. Assign the R data to the Identifier
            R::executeScript("data<-aimms4r::GetData('Cosines');"+
                             "data[2]<-cos(data[2]);" +
                             "aimms4r::SetData(data, 'Cosines');");
        }
    }
    Parameter Cosines {
        IndexDomain: i;
    }
    Set Amount {
        Index: i;
        Definition: {
            {1..20}
        }
    }
    Procedure MainInitialization {
        Comment: "Add initialization statements here that do NOT require any library being initialized already.";
    }
    Procedure PostMainInitialization {
        Comment: {
            "Add initialization statements here that require that the libraries are already initialized properly,
            or add statements that require the Data Management module to be initialized."
        }
    }
    Procedure MainExecution;
    Procedure PreMainTermination {
        Body: {
            return DataManagementExit();
        }
        Comment: {
            "Add termination statements here that require all libraries to be still alive.
            Return 1 if you allow the termination sequence to continue.
            Return 0 if you want to cancel the termination sequence."
        }
    }
    Procedure MainTermination {
        Body: {
            return 1;
        }
        Comment: {
            "Add termination statements here that do not require all libraries to be still alive.
            Return 1 to allow the termination sequence to continue.
            Return 0 if you want to cancel the termination sequence.
            It is recommended to only use the procedure PreMainTermination to cancel the termination sequence and let this procedure always return 1."
        }
    }
}
